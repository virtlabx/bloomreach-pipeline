#!groovy

String awsDeploymentUserCredentialsId = "awsDeploymentUserCredentialsId"
String awsRegion = "eu-west-1"
String awsEcrContainerRepoId = "422434854706"
//String awsEcrRepoName = "bloomreach-ecr-repository"
String awsEcrRepoUrl = awsEcrContainerRepoId +".dkr.ecr." + awsRegion + ".amazonaws.com"
String dockerFileLocation = "content-sre-assignment/app"
String version = "1.1"
String altTag = "latest"

node('master') {
  cleanWs()
  stage("Clone simple app"){
    sh("git clone https://github.com/virtlabx/content-sre-assignment.git")
  }

  stage("Build docker image") {
    dir(dockerFileLocation) {
	  String buildCommand = "docker build --build-arg APP_VERSION=" + version + " -t " + version + " ."
	  sh(buildCommand)
    }
  }

  stage("Push docker image To ECR"){
    String tag = version
	String tagLatest = "latest"
	sh("docker tag " + tag + " " + awsEcrRepoUrl + "/" + tag)
	sh("docker tag " + tag + " " + awsEcrRepoUrl + "/" + tagLatest)
    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: awsDeploymentUserCredentialsId, secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
      withEnv(['AWS_ACCESS_KEY_ID=' + env.AWS_ACCESS_KEY_ID, 'AWS_SECRET_ACCESS_KEY=' + env.AWS_SECRET_ACCESS_KEY]) {
	    sh("aws ecr get-login-password --region " + awsRegion + " | docker login --username AWS --password-stdin " + awsEcrRepoUrl)
      }
    }
	sh("docker push " + awsEcrRepoUrl + ":" + tag)
	sh("docker push " + awsEcrRepoUrl + ":" + tagLatest)
  }
  
  stage("Clean Up docker images on build node") {
    String untaggedImages = """docker rmi -f \$(docker images -f "dangling=true" -q)"""
    sh("docker rmi -f " + untaggedImages)
	sh("docker rmi -f " + targetTag)
  }
}
